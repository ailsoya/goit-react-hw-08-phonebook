{"version":3,"file":"static/js/746.4aa494bc.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Elements/ContactForm.jsx","redux/filter/selectors.js","components/Elements/ContactList.jsx","components/Elements/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectLoading = state => state.contacts.loading\n\nexport const selectAllContacts = state => state.contacts.items","import styles from \"../Style.module.css\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { selectAllContacts } from \"redux/contacts/selectors\"\nimport { addContact } from \"redux/contacts/operations\"\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch()\n    const contacts  = useSelector(selectAllContacts)\n\n    const handleSubmit = (evt) => {\n        const form = evt.target\n        evt.preventDefault()\n        for (const contact of contacts) {\n            if (contact.name === form.name.value) {\n                alert(`${contact.name} is already in contacts`)\n                return\n            }\n        }\n        dispatch(addContact({ name: form.name.value, number: form.number.value }))\n        form.reset()\n    }\n\n    return (\n        <form onSubmit={evt => handleSubmit(evt)} className={styles.Form}>\n            <label className={styles.Label}>\n                Name\n                <input type=\"text\" name=\"name\" required />\n            </label>\n            <label className={styles.Label}>\n                Number\n                <input type=\"tel\" name=\"number\" required />\n            </label>\n            <button type='submit' className={styles.SubmitButton}>Add contact</button>\n        </form>\n    )\n}","export const selectFilter = state => state.filter.value","import styles from \"../Style.module.css\"\nimport { useEffect } from \"react\"\nimport { selectAllContacts } from \"redux/contacts/selectors\"\nimport { selectFilter } from 'redux/filter/selectors'\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { deleteContact, fetchContacts } from \"redux/contacts/operations\"\n\nconst getFilteredContacts = (contacts, filter) => {\n    if(filter==='') {\n        return contacts\n    } else {\n        const normFilter = filter.toLowerCase()\n        const filteredContacts = contacts.filter(contact =>\n          contact.name.toLowerCase().includes(normFilter)\n        )\n        return filteredContacts\n    }\n}\n\nexport const ContactList = () => {\n    const contacts = useSelector(selectAllContacts)\n    const filter = useSelector(selectFilter)\n    const dispatch = useDispatch()\n    const filteredContacts = getFilteredContacts(contacts, filter)\n\n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch])\n\n    const handleDelete = id => {\n        dispatch(deleteContact(id))\n    }\n\n    return (\n        <>\n            {filteredContacts.length > 0 && (\n                <ul>  \n                {filteredContacts.map(contact => (\n                    <li key={contact.id} className={styles.ContactLi}>{contact.name}: {contact.number} <button onClick={() => handleDelete(contact.id)}>Delete</button></li>\n                ))}\n            </ul>\n            )}\n        </>\n    )\n}","import styles from \"../Style.module.css\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { selectFilter } from \"redux/filter/selectors\"\nimport { setFilter } from \"redux/filter/slice\"\n\nexport const Filter = () => {\n    const dispatch = useDispatch()\n    const value = useSelector(selectFilter)\n\n    const handleChange = evt => {\n        const filter = evt.target.value\n        dispatch(setFilter(filter))\n    }\n    \n    return (\n        <label className={styles.Filter}>\n            Find contacts by name\n            <input onChange={evt => handleChange(evt)} type=\"text\" name=\"filter\" value={value} />\n        </label>\n    )\n}","import { ContactForm } from '../components/Elements/ContactForm'\nimport { ContactList } from '../components/Elements/ContactList'\nimport { Filter } from '../components/Elements/Filter'\nimport { Helmet } from 'react-helmet'\n\nexport default function Contacts() {\n  return (\n    <div>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      \n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  )\n}"],"names":["selectAllContacts","state","contacts","items","ContactForm","dispatch","useDispatch","useSelector","_jsxs","onSubmit","evt","form","target","preventDefault","_step","_iterator","_createForOfIteratorHelper","s","n","done","contact","value","name","alert","concat","err","e","f","addContact","number","reset","handleSubmit","className","styles","children","_jsx","type","required","selectFilter","filter","ContactList","filteredContacts","normFilter","toLowerCase","includes","getFilteredContacts","useEffect","fetchContacts","_Fragment","length","map","onClick","id","deleteContact","Filter","onChange","setFilter","handleChange","Contacts","Helmet"],"sourceRoot":""}